// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChangeOperator extends ethereum.Event {
  get params(): ChangeOperator__Params {
    return new ChangeOperator__Params(this);
  }
}

export class ChangeOperator__Params {
  _event: ChangeOperator;

  constructor(event: ChangeOperator) {
    this._event = event;
  }

  get oldOperator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOperator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetAssetData extends ethereum.Event {
  get params(): SetAssetData__Params {
    return new SetAssetData__Params(this);
  }
}

export class SetAssetData__Params {
  _event: SetAssetData;

  constructor(event: SetAssetData) {
    this._event = event;
  }

  get indexes(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get inputs(): Array<Array<SetAssetDataInputsStruct>> {
    return this._event.parameters[1].value.toTupleMatrix<
      SetAssetDataInputsStruct
    >();
  }
}

export class SetAssetDataInputsStruct extends ethereum.Tuple {
  get price(): i32 {
    return this[0].toI32();
  }

  get vol(): i32 {
    return this[1].toI32();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }
}

export class SetEmergencyAdmin extends ethereum.Event {
  get params(): SetEmergencyAdmin__Params {
    return new SetEmergencyAdmin__Params(this);
  }
}

export class SetEmergencyAdmin__Params {
  _event: SetEmergencyAdmin;

  constructor(event: SetEmergencyAdmin) {
    this._event = event;
  }

  get admin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NFTOracle__getAssetResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getVol(): BigInt {
    return this.value1;
  }
}

export class NFTOracle__getIndexesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getOuterIndex(): BigInt {
    return this.value0;
  }

  getInnerIndex(): BigInt {
    return this.value1;
  }
}

export class NFTOracle extends ethereum.SmartContract {
  static bind(address: Address): NFTOracle {
    return new NFTOracle("NFTOracle", address);
  }

  ORACLE_REVISION(): BigInt {
    let result = super.call(
      "ORACLE_REVISION",
      "ORACLE_REVISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ORACLE_REVISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ORACLE_REVISION",
      "ORACLE_REVISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAddressList(): Array<Address> {
    let result = super.call(
      "getAddressList",
      "getAddressList():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAddressList(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAddressList",
      "getAddressList():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getAsset(asset: Address): NFTOracle__getAssetResult {
    let result = super.call("getAsset", "getAsset(address):(uint256,uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return new NFTOracle__getAssetResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getAsset(asset: Address): ethereum.CallResult<NFTOracle__getAssetResult> {
    let result = super.tryCall(
      "getAsset",
      "getAsset(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NFTOracle__getAssetResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  getAssetPrice(asset: Address): BigInt {
    let result = super.call(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );

    return result[0].toBigInt();
  }

  try_getAssetPrice(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetPrice",
      "getAssetPrice(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssetVol(asset: Address): BigInt {
    let result = super.call("getAssetVol", "getAssetVol(address):(uint256)", [
      ethereum.Value.fromAddress(asset)
    ]);

    return result[0].toBigInt();
  }

  try_getAssetVol(asset: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAssetVol",
      "getAssetVol(address):(uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAssets(assets: Array<Address>): Array<Array<BigInt>> {
    let result = super.call(
      "getAssets",
      "getAssets(address[]):(uint256[2][])",
      [ethereum.Value.fromAddressArray(assets)]
    );

    return result[0].toBigIntMatrix();
  }

  try_getAssets(
    assets: Array<Address>
  ): ethereum.CallResult<Array<Array<BigInt>>> {
    let result = super.tryCall(
      "getAssets",
      "getAssets(address[]):(uint256[2][])",
      [ethereum.Value.fromAddressArray(assets)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntMatrix());
  }

  getIndexes(asset: Address): NFTOracle__getIndexesResult {
    let result = super.call(
      "getIndexes",
      "getIndexes(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(asset)]
    );

    return new NFTOracle__getIndexesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getIndexes(
    asset: Address
  ): ethereum.CallResult<NFTOracle__getIndexesResult> {
    let result = super.tryCall(
      "getIndexes",
      "getIndexes(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NFTOracle__getIndexesResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  isEmergencyAdmin(admin: Address): boolean {
    let result = super.call(
      "isEmergencyAdmin",
      "isEmergencyAdmin(address):(bool)",
      [ethereum.Value.fromAddress(admin)]
    );

    return result[0].toBoolean();
  }

  try_isEmergencyAdmin(admin: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isEmergencyAdmin",
      "isEmergencyAdmin(address):(bool)",
      [ethereum.Value.fromAddress(admin)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  operator(): Address {
    let result = super.call("operator", "operator():(address)", []);

    return result[0].toAddress();
  }

  try_operator(): ethereum.CallResult<Address> {
    let result = super.tryCall("operator", "operator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class AddAssetsCall extends ethereum.Call {
  get inputs(): AddAssetsCall__Inputs {
    return new AddAssetsCall__Inputs(this);
  }

  get outputs(): AddAssetsCall__Outputs {
    return new AddAssetsCall__Outputs(this);
  }
}

export class AddAssetsCall__Inputs {
  _call: AddAssetsCall;

  constructor(call: AddAssetsCall) {
    this._call = call;
  }

  get assets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddAssetsCall__Outputs {
  _call: AddAssetsCall;

  constructor(call: AddAssetsCall) {
    this._call = call;
  }
}

export class BatchSetAssetPriceCall extends ethereum.Call {
  get inputs(): BatchSetAssetPriceCall__Inputs {
    return new BatchSetAssetPriceCall__Inputs(this);
  }

  get outputs(): BatchSetAssetPriceCall__Outputs {
    return new BatchSetAssetPriceCall__Outputs(this);
  }
}

export class BatchSetAssetPriceCall__Inputs {
  _call: BatchSetAssetPriceCall;

  constructor(call: BatchSetAssetPriceCall) {
    this._call = call;
  }

  get indexes(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get inputs(): Array<Array<BatchSetAssetPriceCallInputsStruct>> {
    return this._call.inputValues[1].value.toTupleMatrix<
      BatchSetAssetPriceCallInputsStruct
    >();
  }
}

export class BatchSetAssetPriceCall__Outputs {
  _call: BatchSetAssetPriceCall;

  constructor(call: BatchSetAssetPriceCall) {
    this._call = call;
  }
}

export class BatchSetAssetPriceCallInputsStruct extends ethereum.Tuple {
  get price(): i32 {
    return this[0].toI32();
  }

  get vol(): i32 {
    return this[1].toI32();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newOperator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get assets(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetEmergencyAdminCall extends ethereum.Call {
  get inputs(): SetEmergencyAdminCall__Inputs {
    return new SetEmergencyAdminCall__Inputs(this);
  }

  get outputs(): SetEmergencyAdminCall__Outputs {
    return new SetEmergencyAdminCall__Outputs(this);
  }
}

export class SetEmergencyAdminCall__Inputs {
  _call: SetEmergencyAdminCall;

  constructor(call: SetEmergencyAdminCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get enabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetEmergencyAdminCall__Outputs {
  _call: SetEmergencyAdminCall;

  constructor(call: SetEmergencyAdminCall) {
    this._call = call;
  }
}

export class SetOperatorCall extends ethereum.Call {
  get inputs(): SetOperatorCall__Inputs {
    return new SetOperatorCall__Inputs(this);
  }

  get outputs(): SetOperatorCall__Outputs {
    return new SetOperatorCall__Outputs(this);
  }
}

export class SetOperatorCall__Inputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }

  get newOperator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOperatorCall__Outputs {
  _call: SetOperatorCall;

  constructor(call: SetOperatorCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }

  get val(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
